# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

config("cert_manager_log_mem_config") {
  include_dirs = [ "../common/include" ]
}

ohos_static_library("libcert_manager_log_mem_static") {
  subsystem_name = "security"
  part_name = "certificate_manager"
  public_configs = [ ":cert_manager_log_mem_config" ]
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    boundary_sanitize = true
    debug = false
    integer_overflow = true
    ubsan = true
  }
  include_dirs =
      [ "../../../../interfaces/innerkits/cert_manager_standard/main/include" ]
  defines = [
    "L2_STANDARD",
    "_CM_LOG_ENABLE_",
  ]
  sources = [
    "./log/cm_log.c",
    "./posix/cm_mem.c",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  cflags = [
    "-DHILOG_ENABLE",
    "-Wall",
    "-Werror",
  ]
  complete_static_lib = true
}

config("cert_manager_ipc_client_config") {
  include_dirs = [ "cm_ipc/include" ]
}

ohos_static_library("libcert_manager_ipc_client_static") {
  subsystem_name = "security"
  part_name = "certificate_manager"
  public_configs = [ ":cert_manager_ipc_client_config" ]
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    boundary_sanitize = true
    debug = false
    integer_overflow = true
    ubsan = true
  }
  include_dirs =
      [ "../../../../interfaces/innerkits/cert_manager_standard/main/include" ]
  defines = [
    "L2_STANDARD",
    "_CM_LOG_ENABLE_",
  ]
  sources = [
    "./cm_ipc/src/cm_ipc_client.c",
    "./cm_ipc/src/cm_ipc_client_serialization.c",
    "./cm_ipc/src/cm_load_sa.cpp",
    "./cm_ipc/src/cm_request.cpp",
  ]
  deps = [ ":libcert_manager_log_mem_static" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "openssl:libcrypto_shared",
    "samgr:samgr_proxy",
  ]
  cflags_cc = [
    "-DHILOG_ENABLE",
    "-Wall",
    "-Werror",
  ]
  cflags = cflags_cc
  complete_static_lib = true
}
